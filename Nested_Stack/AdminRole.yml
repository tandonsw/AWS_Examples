AWSTemplateFormatVersion: '2010-09-09'
Description: This Cloudformation creates an Admin Role 
Parameters:
  pSamlProviderAdmin:
    Description:       Enter SAML Provider
    Type:              String
    Default:           SamlProvider
  AdminRoleName:
    Description:       Enter SageMkr Admin role name
    Type:              String
    Default:           aws-SageMaker-Admin
  AdminPolicyName:
    Description:       Enter SageMkr Admin policy name
    Type:              String
    Default:           aws_SageMaker_Plcy
Resources:
  rSageMkrAdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
        Ref: AdminRoleName      
      MaxSessionDuration: 36000
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - !Sub arn:aws:iam::${AWS::AccountId}:saml-provider/${pSamlProviderAdmin}
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
               "SAML:aud": "https://signin.aws.amazon.com/saml"
      Path: /
      Policies:
        -
          PolicyName:
            Ref: AdminPolicyName
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: 'sagemaker:*'
                Resource: '*'
              -
                Effect: Allow
                Action:
                    - 'ecr:GetAuthorizationToken'
                    - 'ecr:GetDownloadUrlForLayer'
                    - 'ecr:BatchGetImage'
                    - 'ecr:BatchCheckLayerAvailability'
                    - 'cloudwatch:PutMetricData'
                    - 'cloudwatch:PutMetricAlarm'
                    - 'cloudwatch:DescribeAlarms'
                    - 'cloudwatch:DeleteAlarms'
                    - 'cloudwatch:ListMetrics'
                    - 'ec2:CreateNetworkInterface'
                    - 'ec2:CreateNetworkInterfacePermission'
                    - 'ec2:DeleteNetworkInterface'
                    - 'ec2:DeleteNetworkInterfacePermission'
                    - 'ec2:DescribeNetworkInterfaces'
                    - 'ec2:DescribeVpcs'
                    - 'ec2:DescribeDhcpOptions'
                    - 'ec2:DescribeSubnets'
                    - 'ec2:DescribeSecurityGroups'
                    - 'ec2:DescribeVpcEndpoints'
                    - 'application-autoscaling:DeleteScalingPolicy'
                    - 'application-autoscaling:DeleteScheduledAction'
                    - 'application-autoscaling:DeregisterScalableTarget'
                    - 'application-autoscaling:DescribeScalableTargets'
                    - 'application-autoscaling:DescribeScalingActivities'
                    - 'application-autoscaling:DescribeScalingPolicies'
                    - 'application-autoscaling:DescribeScheduledActions'
                    - 'application-autoscaling:PutScalingPolicy'
                    - 'application-autoscaling:PutScheduledAction'
                    - 'application-autoscaling:RegisterScalableTarget'
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:DescribeLogStreams'
                    - 'logs:GetLogEvents'
                    - 'logs:PutLogEvents'
                    - 'logs:DescribeLogGroups'
                    - 'kms:ListAliases'
                    - 'kms:DescribeKey'
                Resource: '*'
              -
                  Effect: Allow
                  Action:
                      - 'iam:GetRole'
                      - 'iam:ListPolicies'
                      - 'iam:ListAttachedRolePolicies'
                      - 'iam:ListRolePolicies'
                      - 'iam:ListRoles'
                      - 'iam:GetPolicy'
                      - 'iam:GetRolePolicy'
                  Resource: '*'
              -
                  Effect: Allow
                  Action:
                      - 's3:ListAllMyBuckets'
                      - 's3:GetBucketLocation'
                      - 's3:GetBucketVersioning'
                      - 's3:ListBucket'
                      - 's3:ListBucketVersions'
                      - 's3:GetMetricsConfiguration'
                  Resource: '*'
              -
                  Effect: Allow
                  Action:
                    - 'lambda:Get*'
                    - 'lambda:List*'
                  Resource: "*"
              -
                Action: 'iam:CreateServiceLinkedRole'
                Effect: Allow
                Resource: 'arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint'
                Condition:
                    StringLike:
                        'iam:AWSServiceName': sagemaker.application-autoscaling.amazonaws.com
              -
                Effect: Allow
                Action:
                    - 'iam:PassRole'
                Resource: '*'
                Condition:
                    StringEquals:
                        'iam:PassedToService': sagemaker.amazonaws.com
Outputs:
  oExportAdminRole:
    Description: Sagemaker Admin Role
    Value: !GetAtt rSageMkrAdminRole.Arn
    Export:
      Name: SagemakerAdminRole